# Reference link: https://midgetontoes.com/tips-for-using-proguard-with-spring-framework/

# 1. Disable optimization class/marking/final and method/marking/private
#
# By default ProGuard marks classes as final when possible even when
# classes are not declared as final. This causes problems for Spring as
# Spring doesn't allow classes with @Configuration annotation to be final.
# Use following <option> to disable it. Also it makes unused methods private
-optimizations !class/marking/final, !method/marking/private

# 2. Disable shrinking
#
# Specifies not to shrink the input class files. By default, shrinking is applied;
# all classes and class members are removed, except for the ones listed by the various -keep options,
# and the ones on which they depend, directly or indirectly.
-dontshrink

# 3. Adapt Spring resources
#
# If you use configuration files like spring.factories to customise Spring,
# make sure these configuration files are adapted by ProGuard, otherwise
# the class names in those files will be wrong. META-INF/spring.*
# in following code specifies Spring configuration files.
-adaptresourcefilecontents **.properties,META-INF/MANIFEST.MF,META-INF/spring.*

# 4. Keep annotations
#
# Spring uses annotations extensively, so annotations should be kept in
# the runtime to make sure Spring still works properly. *Annotation* in
# code below is used to keep annotations.
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,*Annotation*,EnclosingMethod

# 5. Keep application launch class
#
# If you use Spring Boot, the Application class should be kept to launch the app.
# The option in code below keeps any class with main method.
-keepclasseswithmembers public class * { public static void main(java.lang.String[]);}

# 6. Process bean classes
#
# You can also following examples (https://www.guardsquare.com/en/proguard/manual/examples#beans)
# in ProGuard website to process bean classes by keeping setter and getter methods.

-keep @javax.persistence.MappedSuperclass class *
-keep @javax.persistence.Entity public class * {
    @javax.persistence.* *;
    public void set*(***);
    public boolean is*();
    public *** get*();
    public *** get*(***);
}

# 7. Keep members with Serialization and Spring annotations
-keepclassmembers class * {
    @javax.xml.bind.annotation.* *;
    @org.springframework.beans.factory.annotation.Autowired *;
    @org.springframework.beans.factory.annotation.Value *;
    @org.springframework.context.annotation.Bean *;
}

# 8. Keep specific app classes
-keep class * extends org.springframework.data.repository.Repository {*;}

# 9. FOR DEBUG ONLY
# Uncomment the lines below to see in stacktrace real classname and code line where exception is occured.
# Do not recommend to use for production assemblies
#-keepattributes SourceFile,LineNumberTable
#-verbose
